// automatically generated by the FlatBuffers compiler, do not modify
package ru.vez.kvstore;


import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class PaymentRecord extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_24_3_25(); }
  public static PaymentRecord getRootAsPaymentRecord(ByteBuffer _bb) { return getRootAsPaymentRecord(_bb, new PaymentRecord()); }
  public static PaymentRecord getRootAsPaymentRecord(ByteBuffer _bb, PaymentRecord obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public PaymentRecord __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String sender() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer senderAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer senderInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public String receiver() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer receiverAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer receiverInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  public long amount() { int o = __offset(8); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }

  public static int createPaymentRecord(FlatBufferBuilder builder,
      int senderOffset,
      int receiverOffset,
      long amount) {
    builder.startTable(3);
    PaymentRecord.addAmount(builder, amount);
    PaymentRecord.addReceiver(builder, receiverOffset);
    PaymentRecord.addSender(builder, senderOffset);
    return PaymentRecord.endPaymentRecord(builder);
  }

  public static void startPaymentRecord(FlatBufferBuilder builder) { builder.startTable(3); }
  public static void addSender(FlatBufferBuilder builder, int senderOffset) { builder.addOffset(0, senderOffset, 0); }
  public static void addReceiver(FlatBufferBuilder builder, int receiverOffset) { builder.addOffset(1, receiverOffset, 0); }
  public static void addAmount(FlatBufferBuilder builder, long amount) { builder.addLong(2, amount, 0L); }
  public static int endPaymentRecord(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishPaymentRecordBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset); }
  public static void finishSizePrefixedPaymentRecordBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public PaymentRecord get(int j) { return get(new PaymentRecord(), j); }
    public PaymentRecord get(PaymentRecord obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

